/*
 * File: app/view/UploadParticipants.js
 *
 * This file was generated by Sencha Architect version 4.1.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Admin.view.UploadParticipants', {
    extend: 'Ext.window.Window',
    alias: 'widget.uploadparticipants',

    requires: [
        'Admin.view.UploadParticipantsViewModel',
        'Admin.view.UploadParticipantsViewController',
        'Ext.form.Panel',
        'Ext.form.Label',
        'Ext.form.field.File',
        'Ext.form.field.Hidden',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    controller: 'uploadparticipants',
    viewModel: {
        type: 'uploadparticipants'
    },
    height: 178,
    width: 400,
    title: 'Upload Participants',

    items: [
        {
            xtype: 'form',
            id: 'uploadParticipantFileForm',
            bodyPadding: 10,
            layout: {
                type: 'vbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'label',
                    text: 'Select a file below, then click the Upload Button.'
                },
                {
                    xtype: 'label',
                    height: 15,
                    text: ''
                },
                {
                    xtype: 'filefield',
                    fieldLabel: 'File',
                    labelWidth: 75
                },
                {
                    xtype: 'hiddenfield',
                    flex: 1,
                    id: 'uploadParticipantSession',
                    fieldLabel: 'Label',
                    name: 'SID'
                }
            ]
        }
    ],
    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'top',
            items: [
                {
                    xtype: 'button',
                    handler: 'uploadButtonClicked',
                    icon: '/images/upload.png',
                    text: 'Upload'
                },
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        this.up('window').close();
                    },
                    icon: '/images/delete.png',
                    text: 'Cancel'
                }
            ]
        }
    ]

});