/*
 * File: app/view/RunsPanel.js
 *
 * This file was generated by Sencha Architect version 4.1.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Admin.view.RunsPanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.runspanel',

    requires: [
        'Admin.view.RunsPanelViewModel',
        'Admin.view.RunsPanelViewController',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Number'
    ],

    controller: 'runspanel',
    viewModel: {
        type: 'runspanel'
    },
    height: 419,
    width: 719,
    layout: 'fit',
    title: 'Runs',
    defaultListenerScope: true,

    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'top',
            items: [
                {
                    xtype: 'button',
                    handler: 'onNewRunButonClick',
                    icon: '/images/add.png',
                    text: 'New Run',
                    scope: 'controller'
                }
            ]
        }
    ],
    items: [
        {
            xtype: 'gridpanel',
            scrollable: 'both',
            store: 'RacesStore',
            columns: [
                {
                    xtype: 'numbercolumn',
                    width: 70,
                    dataIndex: 'RaceID',
                    text: 'Run ID',
                    format: '00'
                },
                {
                    xtype: 'gridcolumn',
                    width: 143,
                    dataIndex: 'TeamName',
                    text: 'Team Name'
                },
                {
                    xtype: 'gridcolumn',
                    width: 82,
                    dataIndex: 'BestSpeed',
                    text: 'Speed'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'StatusText',
                    text: 'Status'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'ClassText',
                    text: 'Class'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'RaceDate',
                    text: 'Race Date'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'Notes',
                    text: 'Notes'
                }
            ],
            listeners: {
                rowdblclick: 'onGridpanelRowDblClick',
                rowcontextmenu: 'onGridpanelRowContextMenu'
            }
        }
    ],

    onGridpanelRowDblClick: function(tableview, record, tr, rowIndex, e, eOpts) {
        e.stopEvent();
        var ScoringWindow = Ext.create('Admin.view.ViewRun');
        ScoringWindow.show();
        ScoringWindow.fireEvent('loadRecord',{RunID: record.get('uid')});
    },

    onGridpanelRowContextMenu: function(tableview, record, tr, rowIndex, e, eOpts) {
        e.stopEvent();
        selectedvalue = record.get('uid');
        selectedrec = record;
        popup = Ext.create('Admin.view.RunsPanelMenu');
        popup.showAt(e.getXY());
    }

});